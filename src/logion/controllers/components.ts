/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {}

export interface components {
  schemas: {
    /**
     * FetchLegalOfficersView
     * @description The fetched Legal Officers
     */
    FetchLegalOfficersView: {
      /** @description All the legal officers */
      legalOfficers?: components["schemas"]["LegalOfficerView"][];
    };
    LegalOfficerView: {
      /** @description The SS58 address of the legal officer */
      address?: string;
      /** @description The identification data of the legal officer */
      userIdentity?: components["schemas"]["UserIdentityView"];
      /** @description The postal address of the legal officer */
      postalAddress?: components["schemas"]["PostalAddressView"];
      /** @description Any additional public info */
      additionalDetails?: string;
      /**
       * @description The node info
       * @example https://node01.logion.network
       */
      node?: string;
      /**
       * @description The URL to a custom logo
       * @example https://www.logion.network/logo.png
       */
      logoUrl?: string;
    };
    CreateOrUpdateLegalOfficerView: {
      /** @description The identification data of the legal officer */
      userIdentity?: components["schemas"]["UserIdentityView"];
      /** @description The postal address of the legal officer */
      postalAddress?: components["schemas"]["PostalAddressView"];
      /** @description Any additional public info */
      additionalDetails?: string;
      /**
       * @description The node info
       * @example https://node01.logion.network
       */
      node?: string;
      /**
       * @description The URL to a custom logo
       * @example https://www.logion.network/logo.png
       */
      logoUrl?: string;
    };
    /**
     * UserIdentityView
     * @description Physical person identification data
     */
    UserIdentityView: {
      /** @description E-mail */
      email?: string;
      /** @description First name */
      firstName?: string;
      /** @description Last name */
      lastName?: string;
      /** @description Phone number */
      phoneNumber?: string;
    };
    /**
     * PostalAddressView
     * @description A postal address
     */
    PostalAddressView: {
      /** @description The company of the Legal Officer */
      company?: string;
      /** @description First address line */
      line1?: string;
      /** @description Second address line */
      line2?: string;
      /** @description Postal code */
      postalCode?: string;
      /** @description City */
      city?: string;
      /** @description Country */
      country?: string;
    };
    /**
     * SignInRequestView
     * @description the sign-in request
     */
    SignInRequestView: {
      /** @description Addresses of the accounts to be signed in */
      addresses?: string[];
    };
    /**
     * SignInResponseView
     * @description the sign-in response
     */
    SignInResponseView: {
      /**
       * Format: uuid
       * @description Session identifier
       * @example 5e4ef4bb-8657-444c-9880-d89e9403fc85
       */
      sessionId?: string;
    };
    SignatureView: {
      /** @description <p>A base64-encoded SHA256 hash of a concatenation of</p><ol><li>a resource</li><li>an operation</li><li>the <code>signedOn</code> field</li><li>additional fields in function of the request</li></ol> */
      signature?: string;
      /**
       * Format: date-time
       * @description The signature's timestamp
       */
      signedOn?: string;
    };
    TokenView: {
      /** @description The encoded JWT token */
      value?: string;
      /**
       * Format: date-time
       * @description The token expiration timestamp
       */
      expiredOn?: string;
    };
    /**
     * AuthenticateRequestView
     * @description the authentication request
     */
    AuthenticateRequestView: {
      /**
       * @description A map of signatures, index by SS58 addresses of authentication requester
       * @example [object Object]
       */
      signatures?: { [key: string]: components["schemas"]["SignatureView"] };
    };
    /**
     * AuthenticateResponseView
     * @description the authentication response
     */
    AuthenticateResponseView: {
      /**
       * @description A map of tokens, indexed by SS58 address of authentication requester
       * @example [object Object]
       */
      tokens?: { [key: string]: components["schemas"]["TokenView"] };
    };
  };
}

export interface operations {}

export interface external {}
